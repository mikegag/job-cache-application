{"ast":null,"code":"var _jsxFileName = \"/Users/mg/Documents/documentsStorage/coding/personal/jobcache/client/job-cache-app/src/components/ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Navigate, Outlet, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuthenticated = () => {\n  // Check if the user is authenticated\n  const isLoggedIn = localStorage.getItem(\"user_id\");\n  return isLoggedIn !== null;\n};\nexport default function ProtectedRoute() {\n  _s();\n  // Get the current page ID using useParams\n  const {\n    id\n  } = useParams();\n\n  // Check if the user is authenticated\n  const isAuth = isAuthenticated();\n\n  // Allow access to the login page if the user is not authenticated and the current page is the login page\n  if (!isAuth && (id === \"login\" || id === \"/\")) {\n    return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If the user is not authenticated, redirect them to the signup page\n  return !isAuth ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/signup\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 20\n  }, this) : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 56\n  }, this);\n}\n_s(ProtectedRoute, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","useParams","jsxDEV","_jsxDEV","isAuthenticated","isLoggedIn","localStorage","getItem","ProtectedRoute","_s","id","isAuth","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["/Users/mg/Documents/documentsStorage/coding/personal/jobcache/client/job-cache-app/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React from \"react\";\nimport { Navigate, Outlet, useParams } from \"react-router-dom\";\n\nconst isAuthenticated = () => {\n  // Check if the user is authenticated\n  const isLoggedIn = localStorage.getItem(\"user_id\");\n  return isLoggedIn !== null;\n};\n\nexport default function ProtectedRoute() {\n  // Get the current page ID using useParams\n  const { id } = useParams();\n\n  // Check if the user is authenticated\n  const isAuth = isAuthenticated();\n\n  // Allow access to the login page if the user is not authenticated and the current page is the login page\n  if (!isAuth && (id === \"login\" || id === \"/\")) {\n    return <Outlet />;\n  }\n\n  // If the user is not authenticated, redirect them to the signup page\n  return !isAuth ? <Navigate to=\"/signup\" replace /> : <Outlet />;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B;EACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EAClD,OAAOF,UAAU,KAAK,IAAI;AAC5B,CAAC;AAED,eAAe,SAASG,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC;EACA,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;;EAE1B;EACA,MAAMU,MAAM,GAAGP,eAAe,CAAC,CAAC;;EAEhC;EACA,IAAI,CAACO,MAAM,KAAKD,EAAE,KAAK,OAAO,IAAIA,EAAE,KAAK,GAAG,CAAC,EAAE;IAC7C,oBAAOP,OAAA,CAACH,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnB;;EAEA;EACA,OAAO,CAACJ,MAAM,gBAAGR,OAAA,CAACJ,QAAQ;IAACiB,EAAE,EAAC,SAAS;IAACC,OAAO;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGZ,OAAA,CAACH,MAAM;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjE;AAACN,EAAA,CAduBD,cAAc;EAAA,QAErBP,SAAS;AAAA;AAAAiB,EAAA,GAFFV,cAAc;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}