{"ast":null,"code":"var _jsxFileName = \"/Users/mg/Documents/documentsStorage/coding/personal/jobcache/client/job-cache-app/src/components/ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { Navigate, Outlet } from \"react-router-dom\";\n\n// const isAuthenticated = () => {\n//   const isLoggedIn = localStorage.getItem(\"user_id\");\n//   return isLoggedIn !== null;\n// };\n\n// export default function ProtectedRoute() {\n\n//   isAuthenticated ? <Outlet /> : //stay on current page\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst isAuthenticated = () => {\n  // Check if the user is authenticated\n  const isLoggedIn = localStorage.getItem(\"user_id\");\n  return isLoggedIn !== null;\n};\nexport default function ProtectedRoute() {\n  _s();\n  const [hasAuthRoutes, setHasAuthRoutes] = useState(false);\n  useEffect(() => {\n    // Check if authentication-related routes exist in the DOM\n    const checkAuthRoutes = () => {\n      const authRoutes = document.querySelectorAll('a[href=\"/\"], a[href=\"/login\"], a[href=\"/signup\"]');\n      setHasAuthRoutes(authRoutes.length > 0);\n    };\n\n    // Listen for the DOMContentLoaded event to ensure the DOM is fully loaded\n    document.addEventListener(\"DOMContentLoaded\", checkAuthRoutes);\n\n    // Clean up by removing the event listener when the component unmounts\n    return () => {\n      document.removeEventListener(\"DOMContentLoaded\", checkAuthRoutes);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: hasAuthRoutes && !isAuthenticated() ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/signup\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 46\n    }, this) : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 82\n    }, this)\n  }, void 0, false);\n}\n_s(ProtectedRoute, \"lrJkD0SoxbGoSCzSjDWbA2YeNUM=\");\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","Outlet","jsxDEV","_jsxDEV","Fragment","_Fragment","isAuthenticated","isLoggedIn","localStorage","getItem","ProtectedRoute","_s","hasAuthRoutes","setHasAuthRoutes","checkAuthRoutes","authRoutes","document","querySelectorAll","length","addEventListener","removeEventListener","children","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mg/Documents/documentsStorage/coding/personal/jobcache/client/job-cache-app/src/components/ProtectedRoute.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import { Navigate, Outlet } from \"react-router-dom\";\n\n// const isAuthenticated = () => {\n//   const isLoggedIn = localStorage.getItem(\"user_id\");\n//   return isLoggedIn !== null;\n// };\n\n// export default function ProtectedRoute() {\n  \n//   isAuthenticated ? <Outlet /> : //stay on current page\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\n\nconst isAuthenticated = () => {\n  // Check if the user is authenticated\n  const isLoggedIn = localStorage.getItem(\"user_id\");\n  return isLoggedIn !== null;\n};\n\nexport default function ProtectedRoute() {\n  const [hasAuthRoutes, setHasAuthRoutes] = useState(false);\n\n  useEffect(() => {\n    // Check if authentication-related routes exist in the DOM\n    const checkAuthRoutes = () => {\n      const authRoutes = document.querySelectorAll('a[href=\"/\"], a[href=\"/login\"], a[href=\"/signup\"]');\n      setHasAuthRoutes(authRoutes.length > 0);\n    };\n\n    // Listen for the DOMContentLoaded event to ensure the DOM is fully loaded\n    document.addEventListener(\"DOMContentLoaded\", checkAuthRoutes);\n\n    // Clean up by removing the event listener when the component unmounts\n    return () => {\n      document.removeEventListener(\"DOMContentLoaded\", checkAuthRoutes);\n    };\n  }, []);\n\n  return (\n    <>\n      {hasAuthRoutes && !isAuthenticated() ? <Navigate to=\"/signup\" replace /> : <Outlet />}\n    </>\n  );\n}\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B;EACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EAClD,OAAOF,UAAU,KAAK,IAAI;AAC5B,CAAC;AAED,eAAe,SAASG,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEzDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,eAAe,GAAGA,CAAA,KAAM;MAC5B,MAAMC,UAAU,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,kDAAkD,CAAC;MAChGJ,gBAAgB,CAACE,UAAU,CAACG,MAAM,GAAG,CAAC,CAAC;IACzC,CAAC;;IAED;IACAF,QAAQ,CAACG,gBAAgB,CAAC,kBAAkB,EAAEL,eAAe,CAAC;;IAE9D;IACA,OAAO,MAAM;MACXE,QAAQ,CAACI,mBAAmB,CAAC,kBAAkB,EAAEN,eAAe,CAAC;IACnE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAAAE,SAAA;IAAAgB,QAAA,EACGT,aAAa,IAAI,CAACN,eAAe,CAAC,CAAC,gBAAGH,OAAA,CAACH,QAAQ;MAACsB,EAAE,EAAC,SAAS;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGxB,OAAA,CAACF,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACrF,CAAC;AAEP;AAAChB,EAAA,CAxBuBD,cAAc;AAAAkB,EAAA,GAAdlB,cAAc;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}