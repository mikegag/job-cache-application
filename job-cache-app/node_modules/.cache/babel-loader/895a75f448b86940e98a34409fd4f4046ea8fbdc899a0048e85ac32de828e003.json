{"ast":null,"code":"var _jsxFileName = \"/Users/mg/Documents/documentsStorage/coding/personal/jobcache/client/job-cache-app/src/components/Motivation/Quote.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport quotesData from \"../../quotes.json\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Quote() {\n  _s();\n  const viewedQuote = useRef(true);\n  const [randomQuote, setRandomQuote] = useState(() => {\n    // Retrieve the quote from local storage on initial render\n    const storedQuote = localStorage.getItem(\"randomQuote\");\n    return storedQuote ? JSON.parse(storedQuote) : null;\n  });\n  const getQuote = () => {\n    const quotes = quotesData.quotes;\n    const randomIndex = Math.floor(Math.random() * quotes.length);\n    const quote = quotes[randomIndex];\n    setRandomQuote(quote);\n    localStorage.setItem(\"randomQuote\", JSON.stringify(quote));\n    localStorage.setItem(\"lastQuoteTime\", Date.now());\n  };\n  useEffect(() => {\n    const lastQuoteTime = localStorage.getItem('lastQuoteTime');\n    const currentTime = Date.now();\n    const timeElapsed = currentTime - lastQuoteTime;\n    const intervalDuration = 1000 * 60 * 60 * 16;\n    if (!viewedQuote.current || timeElapsed >= intervalDuration) {\n      getQuote();\n      viewedQuote.current = true;\n    } else {\n      const timeRemaining = intervalDuration - timeElapsed;\n      const intervalId = setInterval(() => {\n        getQuote();\n      }, timeRemaining);\n      return () => clearInterval(intervalId);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: randomQuote ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [randomQuote.quote, \" - \", randomQuote.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Check back later for a Motivational Quote!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_s(Quote, \"ecxMJWohoK3u3PaHA9/Kh5LoLrA=\");\n_c = Quote;\nvar _c;\n$RefreshReg$(_c, \"Quote\");","map":{"version":3,"names":["React","useEffect","useState","useRef","quotesData","jsxDEV","_jsxDEV","Fragment","_Fragment","Quote","_s","viewedQuote","randomQuote","setRandomQuote","storedQuote","localStorage","getItem","JSON","parse","getQuote","quotes","randomIndex","Math","floor","random","length","quote","setItem","stringify","Date","now","lastQuoteTime","currentTime","timeElapsed","intervalDuration","current","timeRemaining","intervalId","setInterval","clearInterval","children","author","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mg/Documents/documentsStorage/coding/personal/jobcache/client/job-cache-app/src/components/Motivation/Quote.jsx"],"sourcesContent":["import React from \"react\"\nimport { useEffect, useState, useRef } from \"react\"\nimport quotesData from \"../../quotes.json\"\n\nexport default function Quote() {\n\n    const viewedQuote = useRef(true)\n    const [randomQuote, setRandomQuote] = useState(() => {\n        // Retrieve the quote from local storage on initial render\n        const storedQuote = localStorage.getItem(\"randomQuote\")\n        return storedQuote ? JSON.parse(storedQuote) : null\n    })\n\n    const getQuote = () => {\n        const quotes = quotesData.quotes\n        const randomIndex = Math.floor(Math.random() * quotes.length)\n        const quote = quotes[randomIndex]\n        setRandomQuote(quote)\n        localStorage.setItem(\"randomQuote\", JSON.stringify(quote))\n        localStorage.setItem(\"lastQuoteTime\", Date.now())\n    }\n\n    useEffect(() => {\n        const lastQuoteTime = localStorage.getItem('lastQuoteTime')\n        const currentTime = Date.now()\n        const timeElapsed = currentTime - lastQuoteTime\n        const intervalDuration = 1000 * 60 * 60 * 16\n    \n        if (!viewedQuote.current || timeElapsed >= intervalDuration) {\n            getQuote()\n            viewedQuote.current = true\n        } else {\n            const timeRemaining = intervalDuration - timeElapsed;\n            const intervalId = setInterval(() => {\n                getQuote()\n            }, timeRemaining)\n    \n            return () => clearInterval(intervalId)\n        }\n    }, [])\n    \n    return (\n        <>\n            {randomQuote ? \n                <p>{randomQuote.quote} - {randomQuote.author}</p>\n            :\n                <p>Check back later for a Motivational Quote!</p>\n            }\n        </>\n    )\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,UAAU,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAE5B,MAAMC,WAAW,GAAGR,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,MAAM;IACjD;IACA,MAAMY,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACvD,OAAOF,WAAW,GAAGG,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,GAAG,IAAI;EACvD,CAAC,CAAC;EAEF,MAAMK,QAAQ,GAAGA,CAAA,KAAM;IACnB,MAAMC,MAAM,GAAGhB,UAAU,CAACgB,MAAM;IAChC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,MAAM,CAACK,MAAM,CAAC;IAC7D,MAAMC,KAAK,GAAGN,MAAM,CAACC,WAAW,CAAC;IACjCR,cAAc,CAACa,KAAK,CAAC;IACrBX,YAAY,CAACY,OAAO,CAAC,aAAa,EAAEV,IAAI,CAACW,SAAS,CAACF,KAAK,CAAC,CAAC;IAC1DX,YAAY,CAACY,OAAO,CAAC,eAAe,EAAEE,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;EACrD,CAAC;EAED7B,SAAS,CAAC,MAAM;IACZ,MAAM8B,aAAa,GAAGhB,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAC3D,MAAMgB,WAAW,GAAGH,IAAI,CAACC,GAAG,CAAC,CAAC;IAC9B,MAAMG,WAAW,GAAGD,WAAW,GAAGD,aAAa;IAC/C,MAAMG,gBAAgB,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IAE5C,IAAI,CAACvB,WAAW,CAACwB,OAAO,IAAIF,WAAW,IAAIC,gBAAgB,EAAE;MACzDf,QAAQ,CAAC,CAAC;MACVR,WAAW,CAACwB,OAAO,GAAG,IAAI;IAC9B,CAAC,MAAM;MACH,MAAMC,aAAa,GAAGF,gBAAgB,GAAGD,WAAW;MACpD,MAAMI,UAAU,GAAGC,WAAW,CAAC,MAAM;QACjCnB,QAAQ,CAAC,CAAC;MACd,CAAC,EAAEiB,aAAa,CAAC;MAEjB,OAAO,MAAMG,aAAa,CAACF,UAAU,CAAC;IAC1C;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI/B,OAAA,CAAAE,SAAA;IAAAgC,QAAA,EACK5B,WAAW,gBACRN,OAAA;MAAAkC,QAAA,GAAI5B,WAAW,CAACc,KAAK,EAAC,KAAG,EAACd,WAAW,CAAC6B,MAAM;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEjDvC,OAAA;MAAAkC,QAAA,EAAG;IAA0C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC,gBAEvD,CAAC;AAEX;AAACnC,EAAA,CA9CuBD,KAAK;AAAAqC,EAAA,GAALrC,KAAK;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}